{"version":3,"sources":["TodoContext.js","components/TodoCreate.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoTemplate.js","App.js","reportWebVitals.js","index.js"],"names":["initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","CircleButton","styled","button","props","open","css","InsertFormPositioner","div","InsertForm","form","Input","input","TodoCreate","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","placeholder","autoFocus","onChange","target","onClick","React","memo","TodoHeaadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","CheckCircle","Text","Remove","TodoItemBlock","TodoItem","TodoListBlock","TodoList","todos","TodoTemplateBlock","TodoTemplate","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebb4aaab.chunk.js","sourcesContent":["import React, { useReducer, createContext, useContext, useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n    {\r\n        id: 1,\r\n        text: '프로젝트 생성하기',\r\n        done: true\r\n    },\r\n    {\r\n        id: 2,\r\n        text: '컴포넌트 스타일링하기',\r\n        done: true\r\n    },\r\n    {\r\n        id: 3,\r\n        text: 'Context 만들기',\r\n        done: false\r\n    },\r\n    {\r\n        id: 4,\r\n        text: '기능 구현하기',\r\n        done: false\r\n    },\r\n];\r\n\r\nfunction todoReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n            return state.concat(action.todo);\r\n        case 'TOGGLE':\r\n            return state.map(\r\n                todo => todo.id === action.id ? {...todo, done: !todo.done } : todo\r\n            );\r\n        case 'REMOVE':\r\n            return state.filter(todo => todo.id !== action.id);\r\n        default:\r\n            throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n}\r\n\r\nconst TodoStateContext = createContext();\r\nconst TodoDispatchContext = createContext();\r\nconst TodoNextIdContext = createContext();\r\n\r\nexport function TodoProvider({ children }) {\r\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n    const nextId = useRef(5);\r\n\r\n    return (\r\n        <TodoStateContext.Provider value={state}>\r\n            <TodoDispatchContext.Provider value={dispatch}>\r\n                <TodoNextIdContext.Provider value={nextId}>\r\n                    {children}\r\n                </TodoNextIdContext.Provider>\r\n            </TodoDispatchContext.Provider>\r\n        </TodoStateContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTodoState() {\r\n    const context = useContext(TodoStateContext);\r\n    if (!context) {\r\n        throw new Error(`Cannot find TodoProvider`);\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoDispatch() {\r\n    const context = useContext(TodoDispatchContext);\r\n    if (!context) {\r\n        throw new Error(`Cannot find TodoProvider`);\r\n    }\r\n    return context;\r\n}\r\n\r\nexport function useTodoNextId() {\r\n    const context = useContext(TodoNextIdContext);\r\n    if (!context) {\r\n        throw new Error(`Cannot find TodoProvider`);\r\n    }\r\n    return context;\r\n}","import React, { useState } from 'react';\r\nimport styled, { css } from \"styled-components\";\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\r\n\r\nconst CircleButton = styled.button`\r\n    background: #38d9a9;\r\n    &:hover {\r\n        background: #63e6be;\r\n    }\r\n    &:active {\r\n        background: #20c997;\r\n    }\r\n\r\n    z-index: 5;\r\n    cursor: pointer;\r\n    width: 80px;\r\n    height: 80px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    position: absolute;\r\n    left: 50%;\r\n    bottom: 0px;\r\n    transform: translate(-50%, 50%);\r\n\r\n    font-size: 60px;\r\n    color: white;\r\n    border-radius: 40px;\r\n\r\n    border: none;\r\n    outline: none;\r\n\r\n    transition: 0.125s all ease-in;\r\n    ${props => props.open && css`\r\n        background: #ff6b6b;\r\n        &:hover {\r\n            background: #ff8787;\r\n        }\r\n        &:active {\r\n            background: #fa5252;\r\n        }\r\n        transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n    width: 100%;\r\n    bottom: 0;\r\n    left: 0;\r\n    position: absolute;\r\n`;\r\n// use form to use onSubmit event\r\nconst InsertForm = styled.form`\r\n    background: #f8f9fa;\r\n    padding: 32px;\r\n    padding-bottom: 72px;\r\n    border-bottom-left-radius: 16px;\r\n    border-bottom-right-radius: 16px;\r\n    border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    padding: 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #dee2e6;\r\n    width: 100%;\r\n    outline: none;\r\n    font-size: 18px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nfunction TodoCreate() {\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n\r\n    const onToggle = () => setOpen(!open);\r\n    const onChange = (e) => setValue(e.target.value);\r\n    // prevent refresh after event\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: 'CREATE',\r\n            todo: {\r\n                id: nextId.current,\r\n                text: value,\r\n                done: false,\r\n            }\r\n        });\r\n        setValue('');\r\n        setOpen(false);\r\n        nextId.current += 1;\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            {open && (\r\n                <InsertFormPositioner>\r\n                    <InsertForm onSubmit={onSubmit}>\r\n                        <Input \r\n                            placeholder=\"할 일을 입력 후, Enter 를 누르세요\" \r\n                            autoFocus \r\n                            onChange={onChange}\r\n                            value={value}\r\n                        />\r\n                    </InsertForm>\r\n                </InsertFormPositioner>\r\n            )}\r\n            <CircleButton onClick={onToggle} open={open}>\r\n                <MdAdd />\r\n            </CircleButton>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoCreate);","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useTodoState } from \"../TodoContext\";\r\n\r\nconst TodoHeaadBlock = styled.div`\r\n    //Nested CSS 문법\r\n    padding-top: 48px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    border-bottom: 1px solid #e9ecef;\r\n\r\n\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 36px;\r\n        color: #343a40;\r\n    }\r\n    .day {\r\n        margin-top: 4px;\r\n        color: #868e96;\r\n        font-size: 21px;\r\n    }\r\n    .tasks-left {\r\n        color: #20c997;\r\n        font-size: 18px;\r\n        margin-top: 40px;\r\n        font-weight: bold;\r\n    }\r\n`;\r\n\r\nfunction TodoHead() {\r\n    const todos = useTodoState();\r\n    const undoneTasks = todos.filter(todo => !todo.done);\r\n\r\n    const today = new Date();\r\n    const dateString = today.toLocaleDateString('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n    });\r\n    const dayName = today.toLocaleDateString('ko-KR', {\r\n        weekday: 'long'\r\n    });\r\n\r\n\r\n    return (\r\n        <TodoHeaadBlock>\r\n            <h1>{dateString}</h1>\r\n            <div className=\"day\">{dayName}</div>\r\n            <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\r\n        </TodoHeaadBlock>\r\n    );\r\n}\r\n\r\nexport default TodoHead;","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { MdDone, MdDelete } from \"react-icons/md\";\r\nimport { useTodoDispatch } from \"../TodoContext\";\r\n\r\n\r\nconst CheckCircle = styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 16px;\r\n    border: 1px solid #ced4da;\r\n    font-size: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: 20px;\r\n    cursor: pointer;\r\n    ${props => props.done && \r\n    css`\r\n        border: 1px solid #38d9a9;\r\n        color: #38d9a9;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n    flex: 1;\r\n    font-size: 21px;\r\n    color: #495057;\r\n    ${props => props.done &&\r\n    css`\r\n        color: #ced4da;\r\n    `}\r\n`;\r\n\r\nconst Remove = styled.div`\r\n    opacity: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #dee2e6;\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: #ff6b6b;\r\n    }\r\n`;\r\n\r\nconst TodoItemBlock = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    &:hover {\r\n        ${Remove} {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nfunction TodoItem({id, done, text}) {\r\n    const dispatch = useTodoDispatch();\r\n    const onToggle = () => \r\n        dispatch({\r\n            type: 'TOGGLE',\r\n            id\r\n        });\r\n    const onRemove = () =>\r\n        dispatch({\r\n            type: 'REMOVE',\r\n            id\r\n        });\r\n\r\n    return (\r\n        <TodoItemBlock>\r\n            <CheckCircle done={done} onClick={onToggle}>\r\n                {done && <MdDone />}\r\n            </CheckCircle>\r\n            <Text done={done}>{text}</Text>\r\n            <Remove onClick={onRemove}>\r\n                <MdDelete />\r\n            </Remove>\r\n        </TodoItemBlock>\r\n    );\r\n}\r\n\r\nexport default React.memo(TodoItem);\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport { useTodoState } from \"../TodoContext\";\r\n\r\nconst TodoListBlock = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nfunction TodoList () {\r\n    const todos = useTodoState();\r\n    return (\r\n        <TodoListBlock>\r\n            {todos.map(todo => (\r\n                <TodoItem\r\n                    key={todo.id}\r\n                    id={todo.id}\r\n                    text={todo.text}\r\n                    done={todo.done}\r\n                />\r\n            ))}\r\n        </TodoListBlock>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n    width: 512px;\r\n    height: 768px;\r\n\r\n    position: relative;\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n    margin-top: 96px;\r\n    margin-bottom: 32px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction TodoTemplate({ children }) {\r\n    return <TodoTemplateBlock>{children}</TodoTemplateBlock>\r\n}\r\n\r\nexport default TodoTemplate;","import React from \"react\";\nimport { createGlobalStyle } from 'styled-components';\nimport TodoCreate from \"./components/TodoCreate\";\nimport TodoHead from \"./components/TodoHead\";\nimport TodoList from \"./components/TodoList\";\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport { TodoProvider } from \"./TodoContext\";\n\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\nfunction App() {\n  return (\n    <TodoProvider>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}